memberSearchIndex = [{"p":"info.kgeorgiy.ja.trofimov.concurrent","c":"IterativeParallelism","l":"all(int, List<? extends T>, Predicate<? super T>)","u":"all(int,java.util.List,java.util.function.Predicate)"},{"p":"info.kgeorgiy.ja.trofimov.concurrent","c":"IterativeParallelism","l":"any(int, List<? extends T>, Predicate<? super T>)","u":"any(int,java.util.List,java.util.function.Predicate)"},{"p":"info.kgeorgiy.ja.trofimov.concurrent","c":"ParallelMapperImpl.Counter","l":"await()"},{"p":"info.kgeorgiy.ja.trofimov.concurrent","c":"ParallelMapperImpl.Counter","l":"awaiting"},{"p":"info.kgeorgiy.ja.trofimov.concurrent","c":"ParallelMapperImpl","l":"close()"},{"p":"info.kgeorgiy.ja.trofimov.concurrent","c":"IterativeParallelism","l":"count(int, List<? extends T>, Predicate<? super T>)","u":"count(int,java.util.List,java.util.function.Predicate)"},{"p":"info.kgeorgiy.ja.trofimov.concurrent","c":"ParallelMapperImpl.Counter","l":"Counter(int)","u":"%3Cinit%3E(int)"},{"p":"info.kgeorgiy.ja.trofimov.concurrent","c":"IterativeParallelism","l":"divideInParts(List<E>, int)","u":"divideInParts(java.util.List,int)"},{"p":"info.kgeorgiy.ja.trofimov.concurrent","c":"ParallelMapperImpl.Counter","l":"done"},{"p":"info.kgeorgiy.ja.trofimov.concurrent","c":"IterativeParallelism","l":"filter(int, List<? extends T>, Predicate<? super T>)","u":"filter(int,java.util.List,java.util.function.Predicate)"},{"p":"info.kgeorgiy.ja.trofimov.concurrent","c":"IterativeParallelism","l":"getReducer(AdvancedIP.Monoid<T>)","u":"getReducer(info.kgeorgiy.java.advanced.concurrent.AdvancedIP.Monoid)"},{"p":"info.kgeorgiy.ja.trofimov.concurrent","c":"ParallelMapperImpl.Counter","l":"increment()"},{"p":"info.kgeorgiy.ja.trofimov.concurrent","c":"IterativeParallelism","l":"IterativeParallelism()","u":"%3Cinit%3E()"},{"p":"info.kgeorgiy.ja.trofimov.concurrent","c":"IterativeParallelism","l":"IterativeParallelism(ParallelMapper)","u":"%3Cinit%3E(info.kgeorgiy.java.advanced.mapper.ParallelMapper)"},{"p":"info.kgeorgiy.ja.trofimov.concurrent","c":"IterativeParallelism","l":"join(int, List<?>)","u":"join(int,java.util.List)"},{"p":"info.kgeorgiy.ja.trofimov.concurrent","c":"ParallelMapperImpl","l":"map(Function<? super T, ? extends R>, List<? extends T>)","u":"map(java.util.function.Function,java.util.List)"},{"p":"info.kgeorgiy.ja.trofimov.concurrent","c":"IterativeParallelism","l":"map(int, List<? extends T>, Function<? super T, ? extends U>)","u":"map(int,java.util.List,java.util.function.Function)"},{"p":"info.kgeorgiy.ja.trofimov.concurrent","c":"IterativeParallelism","l":"mapReduce(int, List<T>, Function<T, R>, AdvancedIP.Monoid<R>)","u":"mapReduce(int,java.util.List,java.util.function.Function,info.kgeorgiy.java.advanced.concurrent.AdvancedIP.Monoid)"},{"p":"info.kgeorgiy.ja.trofimov.concurrent","c":"IterativeParallelism","l":"maximum(int, List<? extends T>, Comparator<? super T>)","u":"maximum(int,java.util.List,java.util.Comparator)"},{"p":"info.kgeorgiy.ja.trofimov.concurrent","c":"IterativeParallelism","l":"minimum(int, List<? extends T>, Comparator<? super T>)","u":"minimum(int,java.util.List,java.util.Comparator)"},{"p":"info.kgeorgiy.ja.trofimov.concurrent","c":"IterativeParallelism","l":"parallelizeFunction(int, List<E>, Function<Stream<E>, R>, Function<Stream<R>, R>)","u":"parallelizeFunction(int,java.util.List,java.util.function.Function,java.util.function.Function)"},{"p":"info.kgeorgiy.ja.trofimov.concurrent","c":"IterativeParallelism","l":"parallelMapper"},{"p":"info.kgeorgiy.ja.trofimov.concurrent","c":"ParallelMapperImpl","l":"ParallelMapperImpl(int)","u":"%3Cinit%3E(int)"},{"p":"info.kgeorgiy.ja.trofimov.concurrent","c":"ParallelMapperImpl","l":"pool"},{"p":"info.kgeorgiy.ja.trofimov.concurrent","c":"IterativeParallelism","l":"reduce(int, List<T>, AdvancedIP.Monoid<T>)","u":"reduce(int,java.util.List,info.kgeorgiy.java.advanced.concurrent.AdvancedIP.Monoid)"},{"p":"info.kgeorgiy.ja.trofimov.concurrent","c":"ParallelMapperImpl","l":"tasks"}];updateSearchResults();